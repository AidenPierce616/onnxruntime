# --------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------
# Dockerfile to run ONNXRuntime with TensorRT integration

# Build base image with required system packages
FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04 AS base

ENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/src/tensorrt/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/lib/aarch64-linux-gnu:/usr/include/aarch64-linux-gnu/:${LD_LIBRARY_PATH}
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update &&\
    apt-get install -y sudo git bash unattended-upgrades wget vim
RUN unattended-upgrade

# Install python3
RUN apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    python3-wheel &&\
    cd /usr/local/bin &&\
    ln -s /usr/bin/python3 python &&\
    ln -s /usr/bin/pip3 pip;

RUN pip install --upgrade pip 
RUN pip install setuptools>=68.2.2

# Install the ONNX Runtime build dependencies on the Jetpack 5.1.2 host 
RUN apt install -y --no-install-recommends \
    build-essential software-properties-common libopenblas-dev \
    libpython3.8-dev python3-setuptools

# Install latest cmake
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
    && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null \
    && apt-get update \
    && apt-get install -y cmake

# Build final image from base. Builds ORT.
FROM base as final
ARG BUILD_USER=onnxruntimedev
ARG BUILD_UID=1000
RUN adduser --gecos 'onnxruntime Build User' --disabled-password $BUILD_USER --uid $BUILD_UID
USER $BUILD_USER
ENV CUDA_MODULE_LOADING "LAZY"

# Switch to root to continue following steps of CI
USER root
ENV CUDA_MODULE_LOADING "LAZY"